apiVersion: v1
kind: Namespace
metadata:
  name: atmos-system
  annotations:
    kuma.io/sidecar-injection: enabled
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rsyslog-config
data:
  rsyslog.conf: |
    global(processInternalMessages="on")

    #module(load="imtcp" StreamDriver.AuthMode="anon" StreamDriver.Mode="1")
    module(load="impstats") # config.enabled=`echo $ENABLE_STATISTICS`)
    module(load="imrelp")
    module(load="imptcp")
    module(load="imudp" TimeRequery="500")

    module(load="omstdout")
    module(load="omelasticsearch")

    module(load="mmjsonparse")
    module(load="mmutf8fix")


    input(type="imptcp" port="514")
    input(type="imudp" port="514")
    input(type="imrelp" port="1601")

    # includes done explicitely
    include(file="/etc/rsyslog.conf.d/log_to_logsene.conf" config.enabled=`echo $ENABLE_LOGSENE`)
    include(file="/etc/rsyslog.conf.d/log_to_files.conf" config.enabled=`echo $ENABLE_LOGFILES`)

    #################### default ruleset begins ####################

    # we emit our own messages to docker console:
    *.* :omstdout:

    include(file="/config/droprules.conf" mode="optional")  # this permits the user to easily drop unwanted messages

    action(name="main_utf8fix" type="mmutf8fix" replacementChar="?")

    include(text=`echo $CNF_CALL_LOG_TO_LOGFILES`)
    include(text=`echo $CNF_CALL_LOG_TO_LOGSENE`)
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: haproxy-ingress
  namespace: atmos-system
  labels:
    app: haproxy-ingress
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: haproxy-ingress
